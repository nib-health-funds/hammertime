service: hammertime
provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 128
  stage: '${env:SLICE}'
  region: '${env:AWS_REGION}'
  deploymentBucket: '${env:DEPLOY_BUCKET}'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'ec2:CreateTags'
        - 'ec2:DeleteTags'
        - 'ec2:DescribeInstances'
        - 'ec2:StartInstances'
        - 'ec2:StopInstances'
        - 'rds:DescribeDBInstances'
        - 'rds:ListTagsForResource'
        - 'rds:AddTagsToResource'
        - 'rds:RemoveTagsFromResource'
        - 'rds:StartDBInstance'
        - 'rds:StopDBInstance'
        - 'autoscaling:CreateOrUpdateTags'
        - 'autoscaling:DeleteTags'
        - 'autoscaling:DescribeAutoScalingGroups'
        - 'autoscaling:UpdateAutoScalingGroup'
      Resource: '*'
    - Effect: Allow
      Action:
        - 'logs:CreateLogGroup'
        - 'logs:CreateLogStream'
        - 'logs:PutLogEvents'
      Resource: 'arn:aws:logs:*:*:*'
  environment:
    hammerTimeDryRun: '${file(./dist/isDryRun.js):isDryRun}'
    defaultOperatingTimezone: '${file(./dist/operatingTimezones.js):defaultOperatingTimezone}'
  custom:
    enabled: '${file(./dist/isEnabled.js):isEnabled}'
functions:
  stop-hammertime:
    handler: hammertime.stop
    timeout: 180
    events: ${file(./dist/events.js):stop}
  start-hammertime:
    handler: hammertime.start
    timeout: 180
    events: ${file(./dist/events.js):start}
